//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.10.19 at 07:09:03 PM CEST 
//


package biz.company.api;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBMergeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.MergeFrom;
import org.jvnet.jaxb2_commons.lang.MergeStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for shippingCostDTO complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="shippingCostDTO">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="orderValueRange" type="{http://api.company.biz}priceRange"/>
 *         &lt;element name="cost" type="{http://api.company.biz}elementPrice"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "shippingCostDTO", propOrder = {
    "orderValueRange",
    "cost"
})
public class ShippingCostDTO
    implements Cloneable, CopyTo, Equals, HashCode, MergeFrom, ToString
{

    @XmlElement(required = true)
    protected PriceRange orderValueRange;
    @XmlElement(required = true)
    protected ElementPrice cost;

    /**
     * Gets the value of the orderValueRange property.
     * 
     * @return
     *     possible object is
     *     {@link PriceRange }
     *     
     */
    public PriceRange getOrderValueRange() {
        return orderValueRange;
    }

    /**
     * Sets the value of the orderValueRange property.
     * 
     * @param value
     *     allowed object is
     *     {@link PriceRange }
     *     
     */
    public void setOrderValueRange(PriceRange value) {
        this.orderValueRange = value;
    }

    /**
     * Gets the value of the cost property.
     * 
     * @return
     *     possible object is
     *     {@link ElementPrice }
     *     
     */
    public ElementPrice getCost() {
        return cost;
    }

    /**
     * Sets the value of the cost property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElementPrice }
     *     
     */
    public void setCost(ElementPrice value) {
        this.cost = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            PriceRange theOrderValueRange;
            theOrderValueRange = this.getOrderValueRange();
            strategy.appendField(locator, this, "orderValueRange", buffer, theOrderValueRange);
        }
        {
            ElementPrice theCost;
            theCost = this.getCost();
            strategy.appendField(locator, this, "cost", buffer, theCost);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ShippingCostDTO)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ShippingCostDTO that = ((ShippingCostDTO) object);
        {
            PriceRange lhsOrderValueRange;
            lhsOrderValueRange = this.getOrderValueRange();
            PriceRange rhsOrderValueRange;
            rhsOrderValueRange = that.getOrderValueRange();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orderValueRange", lhsOrderValueRange), LocatorUtils.property(thatLocator, "orderValueRange", rhsOrderValueRange), lhsOrderValueRange, rhsOrderValueRange)) {
                return false;
            }
        }
        {
            ElementPrice lhsCost;
            lhsCost = this.getCost();
            ElementPrice rhsCost;
            rhsCost = that.getCost();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cost", lhsCost), LocatorUtils.property(thatLocator, "cost", rhsCost), lhsCost, rhsCost)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            PriceRange theOrderValueRange;
            theOrderValueRange = this.getOrderValueRange();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orderValueRange", theOrderValueRange), currentHashCode, theOrderValueRange);
        }
        {
            ElementPrice theCost;
            theCost = this.getCost();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cost", theCost), currentHashCode, theCost);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof ShippingCostDTO) {
            final ShippingCostDTO copy = ((ShippingCostDTO) draftCopy);
            if (this.orderValueRange!= null) {
                PriceRange sourceOrderValueRange;
                sourceOrderValueRange = this.getOrderValueRange();
                PriceRange copyOrderValueRange = ((PriceRange) strategy.copy(LocatorUtils.property(locator, "orderValueRange", sourceOrderValueRange), sourceOrderValueRange));
                copy.setOrderValueRange(copyOrderValueRange);
            } else {
                copy.orderValueRange = null;
            }
            if (this.cost!= null) {
                ElementPrice sourceCost;
                sourceCost = this.getCost();
                ElementPrice copyCost = ((ElementPrice) strategy.copy(LocatorUtils.property(locator, "cost", sourceCost), sourceCost));
                copy.setCost(copyCost);
            } else {
                copy.cost = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new ShippingCostDTO();
    }

    public void mergeFrom(Object left, Object right) {
        final MergeStrategy strategy = JAXBMergeStrategy.INSTANCE;
        mergeFrom(null, null, left, right, strategy);
    }

    public void mergeFrom(ObjectLocator leftLocator, ObjectLocator rightLocator, Object left, Object right, MergeStrategy strategy) {
        if (right instanceof ShippingCostDTO) {
            final ShippingCostDTO target = this;
            final ShippingCostDTO leftObject = ((ShippingCostDTO) left);
            final ShippingCostDTO rightObject = ((ShippingCostDTO) right);
            {
                PriceRange lhsOrderValueRange;
                lhsOrderValueRange = leftObject.getOrderValueRange();
                PriceRange rhsOrderValueRange;
                rhsOrderValueRange = rightObject.getOrderValueRange();
                PriceRange mergedOrderValueRange = ((PriceRange) strategy.merge(LocatorUtils.property(leftLocator, "orderValueRange", lhsOrderValueRange), LocatorUtils.property(rightLocator, "orderValueRange", rhsOrderValueRange), lhsOrderValueRange, rhsOrderValueRange));
                target.setOrderValueRange(mergedOrderValueRange);
            }
            {
                ElementPrice lhsCost;
                lhsCost = leftObject.getCost();
                ElementPrice rhsCost;
                rhsCost = rightObject.getCost();
                ElementPrice mergedCost = ((ElementPrice) strategy.merge(LocatorUtils.property(leftLocator, "cost", lhsCost), LocatorUtils.property(rightLocator, "cost", rhsCost), lhsCost, rhsCost));
                target.setCost(mergedCost);
            }
        }
    }

    public ShippingCostDTO withOrderValueRange(PriceRange value) {
        setOrderValueRange(value);
        return this;
    }

    public ShippingCostDTO withCost(ElementPrice value) {
        setCost(value);
        return this;
    }

}
